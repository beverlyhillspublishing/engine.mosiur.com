{
  "name": "techypark-engine",
  "version": "2.0.0",
  "private": true,
  "description": "AI-Powered WordPress Hosting Platform with Multi-Cloud Support - AWS, GCP, DigitalOcean",
  "author": "TechyPark <dev@techypark.com>",
  "license": "MIT",
  "homepage": "https://github.com/TechyPark/techypark-engine",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TechyPark/techypark-engine.git"
  },
  "workspaces": [
    "backend",
    "frontend",
    "services/*",
    "packages/*"
  ],
  "scripts": {
    "dev": "turbo run dev",
    "build": "turbo run build",
    "start": "turbo run start",
    "test": "turbo run test",
    "lint": "turbo run lint",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,md,json}\"",
    "prepare": "husky install",
    "typecheck": "turbo run typecheck",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up -d",
    "k8s:aws:dev": "kubectl apply -k kubernetes/overlays/aws/dev",
    "k8s:aws:staging": "kubectl apply -k kubernetes/overlays/aws/staging",
    "k8s:aws:prod": "kubectl apply -k kubernetes/overlays/aws/production",
    "k8s:gcp:dev": "kubectl apply -k kubernetes/overlays/gcp/dev",
    "k8s:gcp:staging": "kubectl apply -k kubernetes/overlays/gcp/staging",
    "k8s:gcp:prod": "kubectl apply -k kubernetes/overlays/gcp/production",
    "k8s:do:dev": "kubectl apply -k kubernetes/overlays/digitalocean/dev",
    "k8s:do:staging": "kubectl apply -k kubernetes/overlays/digitalocean/staging",
    "k8s:do:prod": "kubectl apply -k kubernetes/overlays/digitalocean/production",
    "k8s:delete": "kubectl delete -k kubernetes/overlays/production",
    "terraform:init": "cd infrastructure/terraform && terraform init",
    "terraform:plan": "cd infrastructure/terraform && terraform plan",
    "terraform:apply": "cd infrastructure/terraform && terraform apply",
    "terraform:destroy": "cd infrastructure/terraform && terraform destroy",
    "terraform:aws:init": "cd infrastructure/terraform/environments/aws/prod && terraform init",
    "terraform:aws:plan": "cd infrastructure/terraform/environments/aws/prod && terraform plan",
    "terraform:aws:apply": "cd infrastructure/terraform/environments/aws/prod && terraform apply",
    "terraform:gcp:init": "cd infrastructure/terraform/environments/gcp/prod && terraform init",
    "terraform:gcp:plan": "cd infrastructure/terraform/environments/gcp/prod && terraform plan",
    "terraform:gcp:apply": "cd infrastructure/terraform/environments/gcp/prod && terraform apply",
    "terraform:do:init": "cd infrastructure/terraform/environments/digitalocean/prod && terraform init",
    "terraform:do:plan": "cd infrastructure/terraform/environments/digitalocean/prod && terraform plan",
    "terraform:do:apply": "cd infrastructure/terraform/environments/digitalocean/prod && terraform apply",
    "deploy": "npm run build && npm run docker:build && ./scripts/deployment/deploy.sh",
    "deploy:aws": "./scripts/deployment/aws-deploy.sh",
    "deploy:gcp": "./scripts/deployment/gcp-deploy.sh",
    "deploy:do": "./scripts/deployment/do-deploy.sh",
    "migrate:aws-to-gcp": "./scripts/deployment/migrate-cloud.sh aws gcp",
    "migrate:gcp-to-do": "./scripts/deployment/migrate-cloud.sh gcp digitalocean",
    "migrate:do-to-aws": "./scripts/deployment/migrate-cloud.sh digitalocean aws",
    "monitoring:setup": "./scripts/monitoring/setup-prometheus.sh && ./scripts/monitoring/setup-grafana.sh",
    "monitoring:alerts": "./scripts/monitoring/alert-rules.sh",
    "setup": "./scripts/development/setup.sh",
    "seed": "./scripts/development/seed-data.sh",
    "test:env": "./scripts/development/test-env.sh",
    "ai:train": "npm run --workspace=services/ai-copilot train",
    "ai:test": "npm run --workspace=services/ai-copilot test",
    "ai:deploy": "npm run --workspace=services/ai-copilot deploy",
    "wp:install": "npm run --workspace=services/wordpress-manager install",
    "wp:backup": "npm run --workspace=services/wordpress-manager backup",
    "wp:update": "npm run --workspace=services/wordpress-manager update",
    "analytics:process": "npm run --workspace=services/analytics process",
    "analytics:insights": "npm run --workspace=services/analytics insights",
    "security:scan": "npm run test && npm run lint && docker run --rm -v $(pwd):/project securecodewarrior/docker-image-scanner",
    "security:audit": "npm audit && docker run --rm -v $(pwd):/src owasp/zap2docker-stable zap-baseline.py -t http://localhost:3000",
    "cost:analyze": "node scripts/cost-analysis.js",
    "cost:optimize": "node scripts/cost-optimization.js",
    "health:check": "curl -f http://localhost:3000/health && curl -f http://localhost:3001/health",
    "health:k8s": "kubectl get pods && kubectl get services",
    "backup:create": "node scripts/backup.js create",
    "backup:restore": "node scripts/backup.js restore",
    "backup:schedule": "node scripts/backup.js schedule"
  },
  "devDependencies": {
    "turbo": "^1.11.2",
    "prettier": "^3.1.1",
    "eslint": "^8.56.0",
    "typescript": "^5.3.3",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "@commitlint/cli": "^18.4.3",
    "@commitlint/config-conventional": "^18.4.3",
    "@types/node": "^20.10.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^7.3.0",
    "nodemon": "^3.0.2",
    "rimraf": "^5.0.5",
    "tsx": "^4.6.0"
  },
  "dependencies": {
    "@aws-sdk/client-eks": "^3.450.0",
    "@aws-sdk/client-rds": "^3.450.0",
    "@aws-sdk/client-s3": "^3.450.0",
    "@google-cloud/container": "^5.4.0",
    "@google-cloud/storage": "^7.5.0",
    "@google-cloud/sql": "^3.0.0",
    "axios": "^1.6.0",
    "zod": "^3.22.4"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0",
    "bun": ">=1.0.0"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{md,json}": [
      "prettier --write"
    ]
  },
  "keywords": [
    "wordpress",
    "hosting",
    "ai",
    "multi-cloud",
    "aws",
    "gcp",
    "digitalocean",
    "kubernetes",
    "docker",
    "terraform",
    "automation",
    "copilot",
    "visual-builder",
    "analytics",
    "ecommerce",
    "saas"
  ]
}