# ============================================================================
# TechyPark Engine Ultimate - Development Environment
# Multi-Cloud AI-Powered WordPress Hosting Platform
# ============================================================================

version: '3.8'

services:
  # ============================================================================
  # PostgreSQL Database
  # ============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: techypark-postgres
    hostname: postgres
    environment:
      POSTGRES_DB: techypark_engine
      POSTGRES_USER: techypark
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/migrations:/docker-entrypoint-initdb.d:ro
      - ./config/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "5432:5432"
    networks:
      - techypark-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U techypark -d techypark_engine"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    labels:
      - "techypark.service=database"
      - "techypark.environment=development"

  # ============================================================================
  # Redis Cache
  # ============================================================================
  redis:
    image: redis:7-alpine
    container_name: techypark-redis
    hostname: redis
    command: |
      redis-server 
      --appendonly yes 
      --maxmemory 1gb 
      --maxmemory-policy allkeys-lru
      --requirepass password
    volumes:
      - redis_data:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - "6379:6379"
    networks:
      - techypark-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "password", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    labels:
      - "techypark.service=cache"
      - "techypark.environment=development"

  # ============================================================================
  # Backend API (Bun + Hono)
  # ============================================================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: techypark-backend
    hostname: backend
    environment:
      # Platform configuration
      - CLOUD_PLATFORM=local
      - ENVIRONMENT=development
      - NODE_ENV=development
      - PORT=3001

      # Database configuration
      - DATABASE_URL=postgresql://techypark:password@postgres:5432/techypark_engine
      - DATABASE_SSL=false
      - DATABASE_POOL_MAX=20

      # Redis configuration
      - REDIS_URL=redis://:password@redis:6379
      - REDIS_KEY_PREFIX=techypark:dev:

      # Security
      - JWT_SECRET=dev-jwt-secret-change-in-production-ultimate
      - JWT_REFRESH_SECRET=dev-refresh-secret-change-in-production-ultimate
      - SESSION_SECRET=dev-session-secret-change-in-production-ultimate

      # AI Configuration
      - ENABLE_AI_COPILOT=true
      - ENABLE_PREDICTIVE_SCALING=false
      - ENABLE_SMART_ANALYTICS=true
      - OPENAI_API_KEY=
      - ANTHROPIC_API_KEY=

      # Features
      - ENABLE_VISUAL_BUILDER=true
      - ENABLE_ANALYTICS=true
      - ENABLE_MONITORING=true
      - ENABLE_DEBUG_TOOLBAR=true

      # Development settings
      - LOG_LEVEL=debug
      - ENABLE_CORS=true
      - API_CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - ENABLE_API_DOCS=true

      # Mock services for development
      - MOCK_AI_SERVICES=true
      - MOCK_PAYMENT_SERVICES=true
      - MOCK_EMAIL_SERVICES=true
      - MOCK_CLOUD_SERVICES=true
    volumes:
      - ./backend/src:/app/src:cached
      - ./backend/package.json:/app/package.json:cached
      - ./backend/bun.lockb:/app/bun.lockb:cached
      - backend_node_modules:/app/node_modules
      - ./config:/app/config:ro
    ports:
      - "3001:3001"
      - "9229:9229" # Debug port
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - techypark-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /app/src
        - action: rebuild
          path: ./backend/package.json
    labels:
      - "techypark.service=backend"
      - "techypark.environment=development"

  # ============================================================================
  # Frontend (Next.js 14)
  # ============================================================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: techypark-frontend
    hostname: frontend
    environment:
      # Platform configuration
      - CLOUD_PLATFORM=local
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1

      # API configuration
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api
      - NEXT_PUBLIC_WS_URL=ws://localhost:3001/ws

      # Application configuration
      - NEXT_PUBLIC_APP_NAME=TechyPark Engine Ultimate
      - NEXT_PUBLIC_APP_VERSION=2.0.0
      - NEXT_PUBLIC_APP_DESCRIPTION=AI-Powered Multi-Cloud WordPress Hosting

      # Feature flags
      - NEXT_PUBLIC_ENABLE_AI_COPILOT=true
      - NEXT_PUBLIC_ENABLE_VISUAL_BUILDER=true
      - NEXT_PUBLIC_ENABLE_ANALYTICS=true
      - NEXT_PUBLIC_ENABLE_MULTI_CLOUD=true

      # Development features
      - NEXT_PUBLIC_ENABLE_DEV_TOOLS=true
      - NEXT_PUBLIC_ENABLE_DEBUG_MODE=true
      - NEXT_PUBLIC_SHOW_PERFORMANCE_METRICS=true
    volumes:
      - ./frontend:/app:cached
      - frontend_node_modules:/app/node_modules
      - ./config:/app/config:ro
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - techypark-network
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./frontend/package.json
    labels:
      - "techypark.service=frontend"
      - "techypark.environment=development"

  # ============================================================================
  # AI Co-Pilot Service
  # ============================================================================
  ai-copilot:
    build:
      context: ./services/ai-copilot
      dockerfile: Dockerfile
      target: development
    container_name: techypark-ai-copilot
    hostname: ai-copilot
    environment:
      - NODE_ENV=development
      - PORT=3002
      - REDIS_URL=redis://:password@redis:6379/2
      - DATABASE_URL=postgresql://techypark:password@postgres:5432/techypark_engine
      - OPENAI_API_KEY=
      - ANTHROPIC_API_KEY=
      - ENABLE_CODE_SUGGESTIONS=true
      - ENABLE_SECURITY_SCANNING=true
      - ENABLE_PERFORMANCE_OPTIMIZATION=true
    volumes:
      - ./services/ai-copilot/src:/app/src:cached
      - ai_copilot_node_modules:/app/node_modules
    ports:
      - "3002:3002"
    depends_on:
      - postgres
      - redis
    networks:
      - techypark-network
    restart: unless-stopped
    labels:
      - "techypark.service=ai-copilot"
      - "techypark.environment=development"

  # ============================================================================
  # Visual Builder Service
  # ============================================================================
  visual-builder:
    build:
      context: ./services/visual-builder
      dockerfile: Dockerfile
      target: development
    container_name: techypark-visual-builder
    hostname: visual-builder
    environment:
      - NODE_ENV=development
      - PORT=3003
      - REDIS_URL=redis://:password@redis:6379/3
      - DATABASE_URL=postgresql://techypark:password@postgres:5432/techypark_engine
      - ENABLE_REAL_TIME_COLLABORATION=true
      - ENABLE_TEMPLATE_MARKETPLACE=true
      - MAX_TEMPLATES=500
      - MAX_COMPONENTS=1000
    volumes:
      - ./services/visual-builder/src:/app/src:cached
      - visual_builder_node_modules:/app/node_modules
      - ./templates:/app/templates:ro
    ports:
      - "3003:3003"
    depends_on:
      - postgres
      - redis
    networks:
      - techypark-network
    restart: unless-stopped
    labels:
      - "techypark.service=visual-builder"
      - "techypark.environment=development"

  # ============================================================================
  # Analytics Service
  # ============================================================================
  analytics:
    build:
      context: ./services/analytics
      dockerfile: Dockerfile
      target: development
    container_name: techypark-analytics
    hostname: analytics
    environment:
      - NODE_ENV=development
      - PORT=3004
      - REDIS_URL=redis://:password@redis:6379/4
      - DATABASE_URL=postgresql://techypark:password@postgres:5432/techypark_engine
      - ENABLE_REAL_TIME_METRICS=true
      - ENABLE_PREDICTIVE_ANALYTICS=true
      - ANALYTICS_RETENTION_DAYS=365
    volumes:
      - ./services/analytics/src:/app/src:cached
      - analytics_node_modules:/app/node_modules
    ports:
      - "3004:3004"
    depends_on:
      - postgres
      - redis
    networks:
      - techypark-network
    restart: unless-stopped
    labels:
      - "techypark.service=analytics"
      - "techypark.environment=development"

  # ============================================================================
  # WordPress Manager Service
  # ============================================================================
  wordpress-manager:
    build:
      context: ./services/wordpress-manager
      dockerfile: Dockerfile
      target: development
    container_name: techypark-wordpress-manager
    hostname: wordpress-manager
    environment:
      - NODE_ENV=development
      - PORT=3005
      - REDIS_URL=redis://:password@redis:6379/5
      - DATABASE_URL=postgresql://techypark:password@postgres:5432/techypark_engine
      - WP_DEFAULT_VERSION=6.4
      - WP_AUTO_UPDATE=true
      - WP_SECURITY_SCANNING=true
      - WP_BACKUP_FREQUENCY=daily
    volumes:
      - ./services/wordpress-manager/src:/app/src:cached
      - wordpress_manager_node_modules:/app/node_modules
      - wordpress_sites:/var/www/html
    ports:
      - "3005:3005"
      - "8080:8080" # WordPress sites
    depends_on:
      - postgres
      - redis
    networks:
      - techypark-network
    restart: unless-stopped
    labels:
      - "techypark.service=wordpress-manager"
      - "techypark.environment=development"

  # ============================================================================
  # Prometheus (Monitoring)
  # ============================================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: techypark-prometheus
    hostname: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - techypark-network
    restart: unless-stopped
    labels:
      - "techypark.service=monitoring"
      - "techypark.environment=development"

  # ============================================================================
  # Grafana (Dashboards)
  # ============================================================================
  grafana:
    image: grafana/grafana:latest
    container_name: techypark-grafana
    hostname: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards:ro
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - techypark-network
    restart: unless-stopped
    labels:
      - "techypark.service=dashboards"
      - "techypark.environment=development"

  # ============================================================================
  # Jaeger (Distributed Tracing)
  # ============================================================================
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: techypark-jaeger
    hostname: jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "14268:14268"
    networks:
      - techypark-network
    restart: unless-stopped
    labels:
      - "techypark.service=tracing"
      - "techypark.environment=development"

  # ============================================================================
  # MinIO (S3-compatible storage)
  # ============================================================================
  minio:
    image: minio/minio:latest
    container_name: techypark-minio
    hostname: minio
    environment:
      - MINIO_ROOT_USER=techypark
      - MINIO_ROOT_PASSWORD=techypark123
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    networks:
      - techypark-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    labels:
      - "techypark.service=storage"
      - "techypark.environment=development"

  # ============================================================================
  # Mailhog (Email testing)
  # ============================================================================
  mailhog:
    image: mailhog/mailhog:latest
    container_name: techypark-mailhog
    hostname: mailhog
    environment:
      - MH_STORAGE=maildir
      - MH_MAILDIR_PATH=/maildir
    volumes:
      - mailhog_data:/maildir
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - techypark-network
    restart: unless-stopped
    labels:
      - "techypark.service=email"
      - "techypark.environment=development"

  # ============================================================================
  # nginx (Reverse Proxy)
  # ============================================================================
  nginx:
    image: nginx:alpine
    container_name: techypark-nginx
    hostname: nginx
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - techypark-network
    restart: unless-stopped
    labels:
      - "techypark.service=proxy"
      - "techypark.environment=development"

# ============================================================================
# Named Volumes
# ============================================================================
volumes:
  postgres_data:
    driver: local
    labels:
      - "techypark.volume=database"
  redis_data:
    driver: local
    labels:
      - "techypark.volume=cache"
  prometheus_data:
    driver: local
    labels:
      - "techypark.volume=metrics"
  grafana_data:
    driver: local
    labels:
      - "techypark.volume=dashboards"
  minio_data:
    driver: local
    labels:
      - "techypark.volume=storage"
  mailhog_data:
    driver: local
    labels:
      - "techypark.volume=email"
  wordpress_sites:
    driver: local
    labels:
      - "techypark.volume=wordpress"
  backend_node_modules:
    driver: local
    labels:
      - "techypark.volume=backend-deps"
  frontend_node_modules:
    driver: local
    labels:
      - "techypark.volume=frontend-deps"
  ai_copilot_node_modules:
    driver: local
    labels:
      - "techypark.volume=ai-copilot-deps"
  visual_builder_node_modules:
    driver: local
    labels:
      - "techypark.volume=visual-builder-deps"
  analytics_node_modules:
    driver: local
    labels:
      - "techypark.volume=analytics-deps"
  wordpress_manager_node_modules:
    driver: local
    labels:
      - "techypark.volume=wordpress-manager-deps"

# ============================================================================
# Networks
# ============================================================================
networks:
  techypark-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    labels:
      - "techypark.network=internal"

# ============================================================================
# Development Usage
# ============================================================================

# Start all services:
# docker-compose up -d

# Start specific services:
# docker-compose up -d postgres redis backend frontend

# View logs:
# docker-compose logs -f backend
# docker-compose logs -f frontend

# Scale services:
# docker-compose up -d --scale backend=3

# Stop all services:
# docker-compose down

# Reset everything:
# docker-compose down -v --remove-orphans

# Health check all services:
# docker-compose ps

# Access services:
# Frontend:           http://localhost:3000
# Backend API:        http://localhost:3001
# AI Co-Pilot:        http://localhost:3002
# Visual Builder:     http://localhost:3003
# Analytics:          http://localhost:3004
# WordPress Manager:  http://localhost:3005
# WordPress Sites:    http://localhost:8080
# Prometheus:         http://localhost:9090
# Grafana:           http://localhost:3001 (admin/admin123)
# Jaeger:            http://localhost:16686
# MinIO Console:     http://localhost:9001 (techypark/techypark123)
# MailHog:           http://localhost:8025

# ============================================================================
# Generated by TechyPark Engine Ultimate v2.0.0
# Multi-Cloud AI-Powered WordPress Hosting Platform
# ============================================================================
